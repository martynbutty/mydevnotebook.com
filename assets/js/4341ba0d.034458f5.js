"use strict";(self.webpackChunkmydevnotebook_com=self.webpackChunkmydevnotebook_com||[]).push([[3082],{6427:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var s=n(4848),a=n(8453);const o={title:"AWS EC2 Instance Types",description:"How to understand AWS EC2 instance type codes",authors:["martyn"],hide_table_of_contents:!1},i=void 0,r={permalink:"/blog/2022/02/14/AWS-EC2-Instance-Types",source:"@site/blog/2022-02-14-AWS-EC2-Instance-Types/index.md",title:"AWS EC2 Instance Types",description:"How to understand AWS EC2 instance type codes",date:"2022-02-14T00:00:00.000Z",tags:[],readingTime:3.6,hasTruncateMarker:!0,authors:[{name:"Martyn Butterworth",title:"Technical Architect",url:"https://github.com/MartynButty",imageURL:"https://github.com/MartynButty.png",key:"martyn"}],frontMatter:{title:"AWS EC2 Instance Types",description:"How to understand AWS EC2 instance type codes",authors:["martyn"],hide_table_of_contents:!1},unlisted:!1,prevItem:{title:"Performance Testing Basics",permalink:"/blog/2022/09/06/Performance-Testing-Basics"},nextItem:{title:"Docker build fail with VPN",permalink:"/blog/2021/12/14/Docker-VPN-Network-Fix"}},c={authorsImageUrls:[void 0]},d=[];function l(t){const e={img:"img",p:"p",...(0,a.RP)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"To try and make it easier to select an instance type, AWS uses a set format for instance type naming.\nThis article will help you understand how AWS breaks down the instance type into families, generations,\ncapabilities and overall size."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"EC2 Instance Codes",src:n(3821).A+"",width:"356",height:"191"})})]})}function p(t={}){const{wrapper:e}={...(0,a.RP)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}},3821:(t,e,n)=>{n.d(e,{A:()=>s});const s=n.p+"assets/images/AWS_EC2_codes-0fdf792367e80ea4d7cf8cbb39c9d2d6.png"},8453:(t,e,n)=>{n.d(e,{RP:()=>o});var s=n(6540);const a=s.createContext({});function o(t){const e=s.useContext(a);return s.useMemo((()=>"function"==typeof t?t(e):{...e,...t}),[e,t])}}}]);