"use strict";(self.webpackChunkmydevnotebook_com=self.webpackChunkmydevnotebook_com||[]).push([[863],{4932:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=n(4848),a=n(8453);const o={title:"AWS CDK dependent stacks",description:"How to decouple dependent AWS stacks",authors:["martyn"],hide_table_of_contents:!1},r="AWS CDK export cannot be deleted as it is in use",c={permalink:"/blog/2023/07/11/CDK-dependent-stacks",source:"@site/blog/2023-07-11-CDK-dependent-stacks/index.md",title:"AWS CDK dependent stacks",description:"How to decouple dependent AWS stacks",date:"2023-07-11T00:00:00.000Z",formattedDate:"July 11, 2023",tags:[],readingTime:5.965,hasTruncateMarker:!0,authors:[{name:"Martyn Butterworth",title:"Technical Architect",url:"https://github.com/MartynButty",imageURL:"https://github.com/MartynButty.png",key:"martyn"}],frontMatter:{title:"AWS CDK dependent stacks",description:"How to decouple dependent AWS stacks",authors:["martyn"],hide_table_of_contents:!1},unlisted:!1,prevItem:{title:"Aurora Serverless Database Selection",permalink:"/blog/2023/08/01/Aurora-Serverless-database-selection"},nextItem:{title:"Performance Testing Basics",permalink:"/blog/2022/09/06/Performance-Testing-Basics"}},i={authorsImageUrls:[void 0]},d=[{value:"AWS CDK dependent stacks",id:"aws-cdk-dependent-stacks",level:2}];function l(e){const t={code:"code",h2:"h2",img:"img",p:"p",strong:"strong",...(0,a.RP)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:['Sometimes you try deploying a change to an existing multi-stack CDK project, only to get an error message similar to "',(0,s.jsx)(t.strong,{children:"Export cannot be deleted as it is in use"}),"\". Read on if you've encountered this error and are struggling to fix it, or you're just interested in finding out about dependent stacks in AWS."]}),"\n",(0,s.jsx)(t.h2,{id:"aws-cdk-dependent-stacks",children:"AWS CDK dependent stacks"}),"\n",(0,s.jsx)(t.p,{children:"AWS CDK makes it easy to share resources in different stacks. For example, allowing an SQS queue from one stack to be used by a lambda in a different stack. In this case, CDK automatically takes care of cross stack references, and also ensures deployments happen in the correct order."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"CDK dependent stacks architecture",src:n(1458).A+"",width:"623",height:"301"})}),"\n",(0,s.jsxs)(t.p,{children:["The problem you've probably encountered seeing as you're here, is that you're trying to remove  that cross stack reference, but you see  something like:\n",(0,s.jsx)(t.code,{children:"Export <<some AWS ref>> cannot be deleted as it is in use by <<some stack>>"})]})]})}function u(e={}){const{wrapper:t}={...(0,a.RP)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1458:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/DependentStacks-299bd51aa765cfff1a7e67cd60fde1f9.png"},8453:(e,t,n)=>{n.d(t,{RP:()=>o});var s=n(6540);const a=s.createContext({});function o(e){const t=s.useContext(a);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);